|BattleBoard
CLOCK_50 => CLOCK_50.IN4
PS2_CLK => PS2_CLK.IN1
PS2_DAT => PS2_DAT.IN1
KEY[0] => state.OUTPUTSELECT
KEY[0] => state.OUTPUTSELECT
KEY[0] => state.OUTPUTSELECT
KEY[0] => state.OUTPUTSELECT
KEY[0] => state.OUTPUTSELECT
KEY[0] => state.OUTPUTSELECT
KEY[0] => state.OUTPUTSELECT
KEY[0] => state.OUTPUTSELECT
KEY[0] => state.OUTPUTSELECT
KEY[0] => state.OUTPUTSELECT
KEY[0] => state.OUTPUTSELECT
KEY[0] => state.OUTPUTSELECT
KEY[0] => state.OUTPUTSELECT
KEY[0] => state.OUTPUTSELECT
KEY[0] => state.OUTPUTSELECT
KEY[0] => state.OUTPUTSELECT
KEY[0] => state.OUTPUTSELECT
KEY[0] => state.OUTPUTSELECT
KEY[0] => state.OUTPUTSELECT
KEY[0] => state.OUTPUTSELECT
KEY[0] => state.OUTPUTSELECT
KEY[0] => state.OUTPUTSELECT
KEY[0] => state.OUTPUTSELECT
KEY[1] => p1_x.OUTPUTSELECT
KEY[1] => p1_x.OUTPUTSELECT
KEY[1] => p1_x.OUTPUTSELECT
KEY[1] => p1_x.OUTPUTSELECT
KEY[1] => p1_x.OUTPUTSELECT
KEY[1] => p1_x.OUTPUTSELECT
KEY[1] => p1_x.OUTPUTSELECT
KEY[1] => p1_x.OUTPUTSELECT
KEY[1] => p2_x.OUTPUTSELECT
KEY[1] => p2_x.OUTPUTSELECT
KEY[1] => p2_x.OUTPUTSELECT
KEY[1] => p2_x.OUTPUTSELECT
KEY[1] => p2_x.OUTPUTSELECT
KEY[1] => p2_x.OUTPUTSELECT
KEY[1] => p2_x.OUTPUTSELECT
KEY[1] => p2_x.OUTPUTSELECT
KEY[2] => p2_x.DATAA
KEY[2] => p2_x.OUTPUTSELECT
KEY[2] => p2_x.OUTPUTSELECT
KEY[2] => p2_x.OUTPUTSELECT
KEY[2] => p2_x.OUTPUTSELECT
KEY[2] => p2_x.OUTPUTSELECT
KEY[2] => p2_x.OUTPUTSELECT
KEY[2] => p2_x.OUTPUTSELECT
KEY[3] => ~NO_FANOUT~
SW[0] => ~NO_FANOUT~
SW[1] => ~NO_FANOUT~
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
SW[10] => ~NO_FANOUT~
SW[11] => ~NO_FANOUT~
SW[12] => ~NO_FANOUT~
SW[13] => ~NO_FANOUT~
SW[14] => ~NO_FANOUT~
SW[15] => ~NO_FANOUT~
SW[16] => ~NO_FANOUT~
SW[17] => ~NO_FANOUT~
LEDR[0] <= LEDR[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[1] <= LEDR[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[2] <= LEDR[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[3] <= LEDR[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[4] <= LEDR[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[5] <= LEDR[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[6] <= LEDR[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[7] <= LEDR[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[8] <= LEDR[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[9] <= LEDR[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[10] <= LEDR[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[11] <= LEDR[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[12] <= LEDR[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[13] <= LEDR[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[14] <= LEDR[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[15] <= LEDR[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[16] <= LEDR[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[17] <= LEDR[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDG[0] <= <GND>
LEDG[1] <= <GND>
LEDG[2] <= <GND>
LEDG[3] <= <GND>
LEDG[4] <= <GND>
LEDG[5] <= <GND>
LEDG[6] <= <GND>
LEDG[7] <= <GND>
LCD_RS <= lcd:lcd_control.port3
LCD_RW <= lcd:lcd_control.port4
LCD_EN <= lcd:lcd_control.port5
LCD_ON <= <VCC>
LCD_BLON <= <VCC>
LCD_DATA[0] <= lcd:lcd_control.port6
LCD_DATA[1] <= lcd:lcd_control.port6
LCD_DATA[2] <= lcd:lcd_control.port6
LCD_DATA[3] <= lcd:lcd_control.port6
LCD_DATA[4] <= lcd:lcd_control.port6
LCD_DATA[5] <= lcd:lcd_control.port6
LCD_DATA[6] <= lcd:lcd_control.port6
LCD_DATA[7] <= lcd:lcd_control.port6
HEX3[0] <= <VCC>
HEX3[1] <= <VCC>
HEX3[2] <= <VCC>
HEX3[3] <= <VCC>
HEX3[4] <= <VCC>
HEX3[5] <= <VCC>
HEX3[6] <= HEX3.DB_MAX_OUTPUT_PORT_TYPE
HEX2[0] <= seven_segment:comb_5055.port1
HEX2[1] <= seven_segment:comb_5055.port1
HEX2[2] <= seven_segment:comb_5055.port1
HEX2[3] <= seven_segment:comb_5055.port1
HEX2[4] <= seven_segment:comb_5055.port1
HEX2[5] <= seven_segment:comb_5055.port1
HEX2[6] <= seven_segment:comb_5055.port1
HEX1[0] <= seven_segment:comb_5054.port1
HEX1[1] <= seven_segment:comb_5054.port1
HEX1[2] <= seven_segment:comb_5054.port1
HEX1[3] <= seven_segment:comb_5054.port1
HEX1[4] <= seven_segment:comb_5054.port1
HEX1[5] <= seven_segment:comb_5054.port1
HEX1[6] <= seven_segment:comb_5054.port1
HEX0[0] <= seven_segment:comb_5053.port1
HEX0[1] <= seven_segment:comb_5053.port1
HEX0[2] <= seven_segment:comb_5053.port1
HEX0[3] <= seven_segment:comb_5053.port1
HEX0[4] <= seven_segment:comb_5053.port1
HEX0[5] <= seven_segment:comb_5053.port1
HEX0[6] <= seven_segment:comb_5053.port1
HEX7[0] <= <VCC>
HEX7[1] <= <VCC>
HEX7[2] <= <VCC>
HEX7[3] <= <VCC>
HEX7[4] <= <VCC>
HEX7[5] <= <VCC>
HEX7[6] <= HEX7.DB_MAX_OUTPUT_PORT_TYPE
HEX6[0] <= seven_segment:comb_5058.port1
HEX6[1] <= seven_segment:comb_5058.port1
HEX6[2] <= seven_segment:comb_5058.port1
HEX6[3] <= seven_segment:comb_5058.port1
HEX6[4] <= seven_segment:comb_5058.port1
HEX6[5] <= seven_segment:comb_5058.port1
HEX6[6] <= seven_segment:comb_5058.port1
HEX5[0] <= seven_segment:comb_5057.port1
HEX5[1] <= seven_segment:comb_5057.port1
HEX5[2] <= seven_segment:comb_5057.port1
HEX5[3] <= seven_segment:comb_5057.port1
HEX5[4] <= seven_segment:comb_5057.port1
HEX5[5] <= seven_segment:comb_5057.port1
HEX5[6] <= seven_segment:comb_5057.port1
HEX4[0] <= seven_segment:comb_5056.port1
HEX4[1] <= seven_segment:comb_5056.port1
HEX4[2] <= seven_segment:comb_5056.port1
HEX4[3] <= seven_segment:comb_5056.port1
HEX4[4] <= seven_segment:comb_5056.port1
HEX4[5] <= seven_segment:comb_5056.port1
HEX4[6] <= seven_segment:comb_5056.port1
VGA_CLK <= vga_adapter:VGA.VGA_CLK
VGA_HS <= vga_adapter:VGA.VGA_HS
VGA_BLANK_N <= vga_adapter:VGA.VGA_BLANK
VGA_SYNC_N <= vga_adapter:VGA.VGA_SYNC
VGA_VS <= vga_adapter:VGA.VGA_VS
VGA_R[0] <= vga_adapter:VGA.VGA_R
VGA_R[1] <= vga_adapter:VGA.VGA_R
VGA_R[2] <= vga_adapter:VGA.VGA_R
VGA_R[3] <= vga_adapter:VGA.VGA_R
VGA_R[4] <= vga_adapter:VGA.VGA_R
VGA_R[5] <= vga_adapter:VGA.VGA_R
VGA_R[6] <= vga_adapter:VGA.VGA_R
VGA_R[7] <= vga_adapter:VGA.VGA_R
VGA_R[8] <= vga_adapter:VGA.VGA_R
VGA_R[9] <= vga_adapter:VGA.VGA_R
VGA_G[0] <= vga_adapter:VGA.VGA_G
VGA_G[1] <= vga_adapter:VGA.VGA_G
VGA_G[2] <= vga_adapter:VGA.VGA_G
VGA_G[3] <= vga_adapter:VGA.VGA_G
VGA_G[4] <= vga_adapter:VGA.VGA_G
VGA_G[5] <= vga_adapter:VGA.VGA_G
VGA_G[6] <= vga_adapter:VGA.VGA_G
VGA_G[7] <= vga_adapter:VGA.VGA_G
VGA_G[8] <= vga_adapter:VGA.VGA_G
VGA_G[9] <= vga_adapter:VGA.VGA_G
VGA_B[0] <= vga_adapter:VGA.VGA_B
VGA_B[1] <= vga_adapter:VGA.VGA_B
VGA_B[2] <= vga_adapter:VGA.VGA_B
VGA_B[3] <= vga_adapter:VGA.VGA_B
VGA_B[4] <= vga_adapter:VGA.VGA_B
VGA_B[5] <= vga_adapter:VGA.VGA_B
VGA_B[6] <= vga_adapter:VGA.VGA_B
VGA_B[7] <= vga_adapter:VGA.VGA_B
VGA_B[8] <= vga_adapter:VGA.VGA_B
VGA_B[9] <= vga_adapter:VGA.VGA_B


|BattleBoard|twoComp:yMoveA
num[0] => abs.DATAA
num[0] => Add0.IN6
num[1] => abs.DATAA
num[1] => Add0.IN5
num[2] => abs.DATAA
num[2] => Add0.IN4
num[3] => abs.DATAA
num[3] => Add0.IN3
num[4] => abs.OUTPUTSELECT
num[4] => abs.OUTPUTSELECT
num[4] => abs.OUTPUTSELECT
num[4] => abs.OUTPUTSELECT
num[4] => abs.OUTPUTSELECT
num[4] => Add0.IN2
num[4] => negative.DATAIN
abs[0] <= abs.DB_MAX_OUTPUT_PORT_TYPE
abs[1] <= abs.DB_MAX_OUTPUT_PORT_TYPE
abs[2] <= abs.DB_MAX_OUTPUT_PORT_TYPE
abs[3] <= abs.DB_MAX_OUTPUT_PORT_TYPE
abs[4] <= abs.DB_MAX_OUTPUT_PORT_TYPE
negative <= num[4].DB_MAX_OUTPUT_PORT_TYPE


|BattleBoard|twoComp:xMoveA
num[0] => abs.DATAA
num[0] => Add0.IN6
num[1] => abs.DATAA
num[1] => Add0.IN5
num[2] => abs.DATAA
num[2] => Add0.IN4
num[3] => abs.DATAA
num[3] => Add0.IN3
num[4] => abs.OUTPUTSELECT
num[4] => abs.OUTPUTSELECT
num[4] => abs.OUTPUTSELECT
num[4] => abs.OUTPUTSELECT
num[4] => abs.OUTPUTSELECT
num[4] => Add0.IN2
num[4] => negative.DATAIN
abs[0] <= abs.DB_MAX_OUTPUT_PORT_TYPE
abs[1] <= abs.DB_MAX_OUTPUT_PORT_TYPE
abs[2] <= abs.DB_MAX_OUTPUT_PORT_TYPE
abs[3] <= abs.DB_MAX_OUTPUT_PORT_TYPE
abs[4] <= abs.DB_MAX_OUTPUT_PORT_TYPE
negative <= num[4].DB_MAX_OUTPUT_PORT_TYPE


|BattleBoard|distance:dist
diffX[0] => Mux3.IN3
diffX[0] => Mux3.IN4
diffX[0] => Add0.IN5
diffX[1] => Mux2.IN3
diffX[1] => Mux2.IN4
diffX[1] => Add0.IN4
diffX[2] => Mux1.IN3
diffX[2] => Mux1.IN4
diffX[2] => Add0.IN3
diffX[3] => Mux0.IN2
diffX[3] => Mux0.IN3
diffX[3] => Mux0.IN4
diffX[3] => Mux1.IN2
diffX[3] => Mux2.IN2
diffX[3] => Mux3.IN2
diffX[3] => Mux4.IN2
diffX[3] => Mux5.IN2
diffX[3] => Mux6.IN2
diffX[3] => Mux7.IN2
diffX[3] => Add0.IN2
diffY[0] => Mux7.IN4
diffY[0] => Mux7.IN5
diffY[0] => Add1.IN5
diffY[1] => Mux6.IN4
diffY[1] => Mux6.IN5
diffY[1] => Add1.IN4
diffY[2] => Mux5.IN4
diffY[2] => Mux5.IN5
diffY[2] => Add1.IN3
diffY[3] => Mux0.IN5
diffY[3] => Mux1.IN5
diffY[3] => Mux2.IN5
diffY[3] => Mux3.IN5
diffY[3] => Mux4.IN3
diffY[3] => Mux4.IN4
diffY[3] => Mux4.IN5
diffY[3] => Mux5.IN3
diffY[3] => Mux6.IN3
diffY[3] => Mux7.IN3
diffY[3] => Add1.IN2
dist[0] <= dist[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
dist[1] <= dist[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
dist[2] <= dist[2]$latch.DB_MAX_OUTPUT_PORT_TYPE


|BattleBoard|point:pos1
update => y[0]~reg0.CLK
update => y[1]~reg0.CLK
update => y[2]~reg0.CLK
update => x[0]~reg0.CLK
update => x[1]~reg0.CLK
update => x[2]~reg0.CLK
en => y[0]~reg0.ENA
en => x[2]~reg0.ENA
en => x[1]~reg0.ENA
en => x[0]~reg0.ENA
en => y[2]~reg0.ENA
en => y[1]~reg0.ENA
rst => y[0]~reg0.ACLR
rst => y[1]~reg0.ALOAD
rst => y[2]~reg0.ALOAD
rst => x[0]~reg0.ACLR
rst => x[1]~reg0.ALOAD
rst => x[2]~reg0.ALOAD
i => x[2]~reg0.ADATA
i => y[1]~reg0.ADATA
i => x[1]~reg0.ADATA
i => y[2]~reg0.ADATA
xMove[0] => Mux2.IN3
xMove[0] => Mux2.IN4
xMove[0] => Add0.IN4
xMove[1] => Mux1.IN3
xMove[1] => Mux1.IN4
xMove[1] => Add0.IN3
xMove[2] => Mux0.IN2
xMove[2] => Mux0.IN3
xMove[2] => Mux0.IN4
xMove[2] => Mux1.IN2
xMove[2] => Mux2.IN2
xMove[2] => Mux3.IN2
xMove[2] => Mux4.IN2
xMove[2] => Mux5.IN2
xMove[2] => Mux6.IN4
xMove[2] => Mux7.IN4
xMove[2] => Mux8.IN4
xMove[2] => Mux9.IN4
xMove[2] => Mux10.IN4
xMove[2] => Mux11.IN4
xMove[2] => Add0.IN2
yMove[0] => Mux5.IN4
yMove[0] => Mux5.IN5
yMove[0] => Add1.IN4
yMove[1] => Mux4.IN4
yMove[1] => Mux4.IN5
yMove[1] => Add1.IN3
yMove[2] => Mux0.IN5
yMove[2] => Mux1.IN5
yMove[2] => Mux2.IN5
yMove[2] => Mux3.IN3
yMove[2] => Mux3.IN4
yMove[2] => Mux3.IN5
yMove[2] => Mux4.IN3
yMove[2] => Mux5.IN3
yMove[2] => Mux6.IN5
yMove[2] => Mux7.IN5
yMove[2] => Mux8.IN5
yMove[2] => Mux9.IN5
yMove[2] => Mux10.IN5
yMove[2] => Mux11.IN5
yMove[2] => Add1.IN2
x[0] <= x[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x[1] <= x[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x[2] <= x[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y[0] <= y[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y[1] <= y[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y[2] <= y[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|BattleBoard|character:player1
update => health[0]~reg0.CLK
update => health[1]~reg0.CLK
update => health[2]~reg0.CLK
update => health[3]~reg0.CLK
update => health[4]~reg0.CLK
update => health[5]~reg0.CLK
update => health[6]~reg0.CLK
update => health[7]~reg0.CLK
update => health[8]~reg0.CLK
en => health[8]~reg0.ENA
en => health[7]~reg0.ENA
en => health[6]~reg0.ENA
en => health[5]~reg0.ENA
en => health[4]~reg0.ENA
en => health[3]~reg0.ENA
en => health[2]~reg0.ENA
en => health[1]~reg0.ENA
en => health[0]~reg0.ENA
rst => health[0]~reg0.ALOAD
rst => health[1]~reg0.ALOAD
rst => health[2]~reg0.ALOAD
rst => health[3]~reg0.ALOAD
rst => health[4]~reg0.ALOAD
rst => health[5]~reg0.ALOAD
rst => health[6]~reg0.ALOAD
rst => health[7]~reg0.ALOAD
rst => health[8]~reg0.ALOAD
rst => special[1]$latch.LATCH_ENABLE
i[0] => Decoder0.IN1
i[0] => Decoder1.IN2
i[1] => Decoder1.IN1
i[2] => Decoder0.IN0
i[2] => Decoder1.IN0
damage[0] => Add0.IN9
damage[1] => Add0.IN8
damage[2] => Add0.IN7
damage[3] => Add0.IN6
damage[4] => Add0.IN5
damage[5] => Add0.IN4
cost[0] => ~NO_FANOUT~
cost[1] => ~NO_FANOUT~
cost[2] => ~NO_FANOUT~
speed[0] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
speed[1] <= Decoder1.DB_MAX_OUTPUT_PORT_TYPE
speed[2] <= Decoder1.DB_MAX_OUTPUT_PORT_TYPE
dodge[0] <= <VCC>
dodge[1] <= dodge.DB_MAX_OUTPUT_PORT_TYPE
dodge[2] <= <VCC>
health[0] <= health[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
health[1] <= health[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
health[2] <= health[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
health[3] <= health[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
health[4] <= health[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
health[5] <= health[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
health[6] <= health[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
health[7] <= health[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
health[8] <= health[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
special[0] <= <GND>
special[1] <= special[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
special[2] <= <GND>
special[3] <= <VCC>
special[4] <= <GND>
color[0] <= Decoder1.DB_MAX_OUTPUT_PORT_TYPE
color[1] <= Decoder1.DB_MAX_OUTPUT_PORT_TYPE
color[2] <= Decoder1.DB_MAX_OUTPUT_PORT_TYPE


|BattleBoard|attack:p1Attack1
update => damage[0]~reg0.CLK
update => damage[1]~reg0.CLK
update => damage[2]~reg0.CLK
update => damage[3]~reg0.CLK
update => damage[4]~reg0.CLK
update => damage[5]~reg0.CLK
update => load[0]~reg0.CLK
update => load[1]~reg0.CLK
update => load[2]~reg0.CLK
update => load[3]~reg0.CLK
en => damage[0]~reg0.ENA
en => load[3]~reg0.ENA
en => load[2]~reg0.ENA
en => load[1]~reg0.ENA
en => load[0]~reg0.ENA
en => damage[5]~reg0.ENA
en => damage[4]~reg0.ENA
en => damage[3]~reg0.ENA
en => damage[2]~reg0.ENA
en => damage[1]~reg0.ENA
rst => damage[0]~reg0.ALOAD
rst => damage[1]~reg0.ALOAD
rst => damage[2]~reg0.ALOAD
rst => damage[3]~reg0.ALOAD
rst => damage[4]~reg0.ALOAD
rst => damage[5]~reg0.ALOAD
rst => load[0]~reg0.ALOAD
rst => load[1]~reg0.ALOAD
rst => load[2]~reg0.ALOAD
rst => load[3]~reg0.ALOAD
i[0] => Decoder1.IN1
i[0] => Decoder3.IN1
i[1] => Decoder0.IN0
i[1] => Decoder1.IN0
i[1] => Decoder3.IN0
j[0] => Decoder0.IN2
j[0] => Decoder1.IN3
j[0] => Decoder2.IN1
j[0] => Decoder3.IN2
j[1] => Decoder0.IN1
j[1] => Decoder1.IN2
j[1] => Decoder2.IN0
dodge[0] => LessThan0.IN5
dodge[0] => Add0.IN10
dodge[0] => Add1.IN5
dodge[1] => LessThan0.IN4
dodge[1] => Add0.IN9
dodge[1] => Add1.IN4
dodge[2] => LessThan0.IN3
dodge[2] => Add0.IN8
dodge[2] => Add1.IN3
dodge[3] => LessThan0.IN2
dodge[3] => Add0.IN7
dodge[3] => Add1.IN2
dodge[4] => LessThan0.IN1
dodge[4] => Add0.IN6
dodge[4] => Add1.IN1
aim[0] => LessThan0.IN10
aim[0] => Add1.IN10
aim[0] => Add0.IN5
aim[1] => LessThan0.IN9
aim[1] => Add1.IN9
aim[1] => Add0.IN4
aim[2] => LessThan0.IN8
aim[2] => Add1.IN8
aim[2] => Add0.IN3
aim[3] => LessThan0.IN7
aim[3] => Add1.IN7
aim[3] => Add0.IN2
aim[4] => LessThan0.IN6
aim[4] => Add1.IN6
aim[4] => Add0.IN1
spread[0] <= Decoder2.DB_MAX_OUTPUT_PORT_TYPE
spread[1] <= WideOr7.DB_MAX_OUTPUT_PORT_TYPE
spread[2] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
spread[3] <= spread.DB_MAX_OUTPUT_PORT_TYPE
spread[4] <= <GND>
range[0] <= WideOr10.DB_MAX_OUTPUT_PORT_TYPE
range[1] <= WideOr9.DB_MAX_OUTPUT_PORT_TYPE
range[2] <= WideOr8.DB_MAX_OUTPUT_PORT_TYPE
range[3] <= <GND>
range[4] <= <GND>
load[0] <= load[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
load[1] <= load[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
load[2] <= load[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
load[3] <= load[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[0] <= damage[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[1] <= damage[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[2] <= damage[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[3] <= damage[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[4] <= damage[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[5] <= damage[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|BattleBoard|attack:p1Attack2
update => damage[0]~reg0.CLK
update => damage[1]~reg0.CLK
update => damage[2]~reg0.CLK
update => damage[3]~reg0.CLK
update => damage[4]~reg0.CLK
update => damage[5]~reg0.CLK
update => load[0]~reg0.CLK
update => load[1]~reg0.CLK
update => load[2]~reg0.CLK
update => load[3]~reg0.CLK
en => damage[0]~reg0.ENA
en => load[3]~reg0.ENA
en => load[2]~reg0.ENA
en => load[1]~reg0.ENA
en => load[0]~reg0.ENA
en => damage[5]~reg0.ENA
en => damage[4]~reg0.ENA
en => damage[3]~reg0.ENA
en => damage[2]~reg0.ENA
en => damage[1]~reg0.ENA
rst => damage[0]~reg0.ALOAD
rst => damage[1]~reg0.ALOAD
rst => damage[2]~reg0.ALOAD
rst => damage[3]~reg0.ALOAD
rst => damage[4]~reg0.ALOAD
rst => damage[5]~reg0.ALOAD
rst => load[0]~reg0.ALOAD
rst => load[1]~reg0.ALOAD
rst => load[2]~reg0.ALOAD
rst => load[3]~reg0.ALOAD
i[0] => Decoder1.IN1
i[0] => Decoder3.IN1
i[1] => Decoder0.IN0
i[1] => Decoder1.IN0
i[1] => Decoder3.IN0
j[0] => Decoder0.IN2
j[0] => Decoder1.IN3
j[0] => Decoder2.IN1
j[0] => Decoder3.IN2
j[1] => Decoder0.IN1
j[1] => Decoder1.IN2
j[1] => Decoder2.IN0
dodge[0] => LessThan0.IN5
dodge[0] => Add0.IN10
dodge[0] => Add1.IN5
dodge[1] => LessThan0.IN4
dodge[1] => Add0.IN9
dodge[1] => Add1.IN4
dodge[2] => LessThan0.IN3
dodge[2] => Add0.IN8
dodge[2] => Add1.IN3
dodge[3] => LessThan0.IN2
dodge[3] => Add0.IN7
dodge[3] => Add1.IN2
dodge[4] => LessThan0.IN1
dodge[4] => Add0.IN6
dodge[4] => Add1.IN1
aim[0] => LessThan0.IN10
aim[0] => Add1.IN10
aim[0] => Add0.IN5
aim[1] => LessThan0.IN9
aim[1] => Add1.IN9
aim[1] => Add0.IN4
aim[2] => LessThan0.IN8
aim[2] => Add1.IN8
aim[2] => Add0.IN3
aim[3] => LessThan0.IN7
aim[3] => Add1.IN7
aim[3] => Add0.IN2
aim[4] => LessThan0.IN6
aim[4] => Add1.IN6
aim[4] => Add0.IN1
spread[0] <= Decoder2.DB_MAX_OUTPUT_PORT_TYPE
spread[1] <= WideOr7.DB_MAX_OUTPUT_PORT_TYPE
spread[2] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
spread[3] <= spread.DB_MAX_OUTPUT_PORT_TYPE
spread[4] <= <GND>
range[0] <= WideOr10.DB_MAX_OUTPUT_PORT_TYPE
range[1] <= WideOr9.DB_MAX_OUTPUT_PORT_TYPE
range[2] <= WideOr8.DB_MAX_OUTPUT_PORT_TYPE
range[3] <= <GND>
range[4] <= <GND>
load[0] <= load[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
load[1] <= load[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
load[2] <= load[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
load[3] <= load[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[0] <= damage[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[1] <= damage[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[2] <= damage[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[3] <= damage[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[4] <= damage[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[5] <= damage[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|BattleBoard|attack:p1Attack3
update => damage[0]~reg0.CLK
update => damage[1]~reg0.CLK
update => damage[2]~reg0.CLK
update => damage[3]~reg0.CLK
update => damage[4]~reg0.CLK
update => damage[5]~reg0.CLK
update => load[0]~reg0.CLK
update => load[1]~reg0.CLK
update => load[2]~reg0.CLK
update => load[3]~reg0.CLK
en => damage[0]~reg0.ENA
en => load[3]~reg0.ENA
en => load[2]~reg0.ENA
en => load[1]~reg0.ENA
en => load[0]~reg0.ENA
en => damage[5]~reg0.ENA
en => damage[4]~reg0.ENA
en => damage[3]~reg0.ENA
en => damage[2]~reg0.ENA
en => damage[1]~reg0.ENA
rst => damage[0]~reg0.ALOAD
rst => damage[1]~reg0.ALOAD
rst => damage[2]~reg0.ALOAD
rst => damage[3]~reg0.ALOAD
rst => damage[4]~reg0.ALOAD
rst => damage[5]~reg0.ALOAD
rst => load[0]~reg0.ALOAD
rst => load[1]~reg0.ALOAD
rst => load[2]~reg0.ALOAD
rst => load[3]~reg0.ALOAD
i[0] => Decoder1.IN1
i[0] => Decoder3.IN1
i[1] => Decoder0.IN0
i[1] => Decoder1.IN0
i[1] => Decoder3.IN0
j[0] => Decoder0.IN2
j[0] => Decoder1.IN3
j[0] => Decoder2.IN1
j[0] => Decoder3.IN2
j[1] => Decoder0.IN1
j[1] => Decoder1.IN2
j[1] => Decoder2.IN0
dodge[0] => LessThan0.IN5
dodge[0] => Add0.IN10
dodge[0] => Add1.IN5
dodge[1] => LessThan0.IN4
dodge[1] => Add0.IN9
dodge[1] => Add1.IN4
dodge[2] => LessThan0.IN3
dodge[2] => Add0.IN8
dodge[2] => Add1.IN3
dodge[3] => LessThan0.IN2
dodge[3] => Add0.IN7
dodge[3] => Add1.IN2
dodge[4] => LessThan0.IN1
dodge[4] => Add0.IN6
dodge[4] => Add1.IN1
aim[0] => LessThan0.IN10
aim[0] => Add1.IN10
aim[0] => Add0.IN5
aim[1] => LessThan0.IN9
aim[1] => Add1.IN9
aim[1] => Add0.IN4
aim[2] => LessThan0.IN8
aim[2] => Add1.IN8
aim[2] => Add0.IN3
aim[3] => LessThan0.IN7
aim[3] => Add1.IN7
aim[3] => Add0.IN2
aim[4] => LessThan0.IN6
aim[4] => Add1.IN6
aim[4] => Add0.IN1
spread[0] <= Decoder2.DB_MAX_OUTPUT_PORT_TYPE
spread[1] <= WideOr7.DB_MAX_OUTPUT_PORT_TYPE
spread[2] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
spread[3] <= spread.DB_MAX_OUTPUT_PORT_TYPE
spread[4] <= <GND>
range[0] <= WideOr10.DB_MAX_OUTPUT_PORT_TYPE
range[1] <= WideOr9.DB_MAX_OUTPUT_PORT_TYPE
range[2] <= WideOr8.DB_MAX_OUTPUT_PORT_TYPE
range[3] <= <GND>
range[4] <= <GND>
load[0] <= load[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
load[1] <= load[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
load[2] <= load[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
load[3] <= load[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[0] <= damage[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[1] <= damage[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[2] <= damage[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[3] <= damage[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[4] <= damage[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[5] <= damage[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|BattleBoard|attack:p1Attack4
update => damage[0]~reg0.CLK
update => damage[1]~reg0.CLK
update => damage[2]~reg0.CLK
update => damage[3]~reg0.CLK
update => damage[4]~reg0.CLK
update => damage[5]~reg0.CLK
update => load[0]~reg0.CLK
update => load[1]~reg0.CLK
update => load[2]~reg0.CLK
update => load[3]~reg0.CLK
en => damage[0]~reg0.ENA
en => load[3]~reg0.ENA
en => load[2]~reg0.ENA
en => load[1]~reg0.ENA
en => load[0]~reg0.ENA
en => damage[5]~reg0.ENA
en => damage[4]~reg0.ENA
en => damage[3]~reg0.ENA
en => damage[2]~reg0.ENA
en => damage[1]~reg0.ENA
rst => damage[0]~reg0.ALOAD
rst => damage[1]~reg0.ALOAD
rst => damage[2]~reg0.ALOAD
rst => damage[3]~reg0.ALOAD
rst => damage[4]~reg0.ALOAD
rst => damage[5]~reg0.ALOAD
rst => load[0]~reg0.ALOAD
rst => load[1]~reg0.ALOAD
rst => load[2]~reg0.ALOAD
rst => load[3]~reg0.ALOAD
i[0] => Decoder1.IN1
i[0] => Decoder3.IN1
i[1] => Decoder0.IN0
i[1] => Decoder1.IN0
i[1] => Decoder3.IN0
j[0] => Decoder0.IN2
j[0] => Decoder1.IN3
j[0] => Decoder2.IN1
j[0] => Decoder3.IN2
j[1] => Decoder0.IN1
j[1] => Decoder1.IN2
j[1] => Decoder2.IN0
dodge[0] => LessThan0.IN5
dodge[0] => Add0.IN10
dodge[0] => Add1.IN5
dodge[1] => LessThan0.IN4
dodge[1] => Add0.IN9
dodge[1] => Add1.IN4
dodge[2] => LessThan0.IN3
dodge[2] => Add0.IN8
dodge[2] => Add1.IN3
dodge[3] => LessThan0.IN2
dodge[3] => Add0.IN7
dodge[3] => Add1.IN2
dodge[4] => LessThan0.IN1
dodge[4] => Add0.IN6
dodge[4] => Add1.IN1
aim[0] => LessThan0.IN10
aim[0] => Add1.IN10
aim[0] => Add0.IN5
aim[1] => LessThan0.IN9
aim[1] => Add1.IN9
aim[1] => Add0.IN4
aim[2] => LessThan0.IN8
aim[2] => Add1.IN8
aim[2] => Add0.IN3
aim[3] => LessThan0.IN7
aim[3] => Add1.IN7
aim[3] => Add0.IN2
aim[4] => LessThan0.IN6
aim[4] => Add1.IN6
aim[4] => Add0.IN1
spread[0] <= Decoder2.DB_MAX_OUTPUT_PORT_TYPE
spread[1] <= WideOr7.DB_MAX_OUTPUT_PORT_TYPE
spread[2] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
spread[3] <= spread.DB_MAX_OUTPUT_PORT_TYPE
spread[4] <= <GND>
range[0] <= WideOr10.DB_MAX_OUTPUT_PORT_TYPE
range[1] <= WideOr9.DB_MAX_OUTPUT_PORT_TYPE
range[2] <= WideOr8.DB_MAX_OUTPUT_PORT_TYPE
range[3] <= <GND>
range[4] <= <GND>
load[0] <= load[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
load[1] <= load[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
load[2] <= load[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
load[3] <= load[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[0] <= damage[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[1] <= damage[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[2] <= damage[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[3] <= damage[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[4] <= damage[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[5] <= damage[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|BattleBoard|rand:random1
update => seed[0].CLK
update => seed[1].CLK
update => seed[2].CLK
update => seed[3].CLK
update => seed[4].CLK
update => num[0]~reg0.CLK
update => num[1]~reg0.CLK
update => num[2]~reg0.CLK
update => num[3]~reg0.CLK
update => num[4]~reg0.CLK
rst => seed[0].ALOAD
rst => seed[1].ALOAD
rst => seed[2].ALOAD
rst => seed[3].ALOAD
rst => seed[4].ALOAD
rst => num[0]~reg0.ALOAD
rst => num[1]~reg0.ALOAD
rst => num[2]~reg0.ALOAD
rst => num[3]~reg0.ALOAD
rst => num[4]~reg0.ALOAD
dodge[0] => Mod0.IN4
dodge[0] => seed[0].ADATA
dodge[1] => Mod0.IN3
dodge[1] => seed[1].ADATA
dodge[2] => Mod0.IN2
dodge[2] => seed[2].ADATA
dodge[3] => Mod0.IN1
dodge[3] => seed[3].ADATA
dodge[4] => Mod0.IN0
dodge[4] => seed[4].ADATA
num[0] <= num[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
num[1] <= num[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
num[2] <= num[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
num[3] <= num[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
num[4] <= num[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|BattleBoard|point:pos2
update => y[0]~reg0.CLK
update => y[1]~reg0.CLK
update => y[2]~reg0.CLK
update => x[0]~reg0.CLK
update => x[1]~reg0.CLK
update => x[2]~reg0.CLK
en => y[0]~reg0.ENA
en => x[2]~reg0.ENA
en => x[1]~reg0.ENA
en => x[0]~reg0.ENA
en => y[2]~reg0.ENA
en => y[1]~reg0.ENA
rst => y[0]~reg0.ACLR
rst => y[1]~reg0.ALOAD
rst => y[2]~reg0.ALOAD
rst => x[0]~reg0.ACLR
rst => x[1]~reg0.ALOAD
rst => x[2]~reg0.ALOAD
i => x[2]~reg0.ADATA
i => y[1]~reg0.ADATA
i => x[1]~reg0.ADATA
i => y[2]~reg0.ADATA
xMove[0] => Mux2.IN3
xMove[0] => Mux2.IN4
xMove[0] => Add0.IN4
xMove[1] => Mux1.IN3
xMove[1] => Mux1.IN4
xMove[1] => Add0.IN3
xMove[2] => Mux0.IN2
xMove[2] => Mux0.IN3
xMove[2] => Mux0.IN4
xMove[2] => Mux1.IN2
xMove[2] => Mux2.IN2
xMove[2] => Mux3.IN2
xMove[2] => Mux4.IN2
xMove[2] => Mux5.IN2
xMove[2] => Mux6.IN4
xMove[2] => Mux7.IN4
xMove[2] => Mux8.IN4
xMove[2] => Mux9.IN4
xMove[2] => Mux10.IN4
xMove[2] => Mux11.IN4
xMove[2] => Add0.IN2
yMove[0] => Mux5.IN4
yMove[0] => Mux5.IN5
yMove[0] => Add1.IN4
yMove[1] => Mux4.IN4
yMove[1] => Mux4.IN5
yMove[1] => Add1.IN3
yMove[2] => Mux0.IN5
yMove[2] => Mux1.IN5
yMove[2] => Mux2.IN5
yMove[2] => Mux3.IN3
yMove[2] => Mux3.IN4
yMove[2] => Mux3.IN5
yMove[2] => Mux4.IN3
yMove[2] => Mux5.IN3
yMove[2] => Mux6.IN5
yMove[2] => Mux7.IN5
yMove[2] => Mux8.IN5
yMove[2] => Mux9.IN5
yMove[2] => Mux10.IN5
yMove[2] => Mux11.IN5
yMove[2] => Add1.IN2
x[0] <= x[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x[1] <= x[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x[2] <= x[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y[0] <= y[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y[1] <= y[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y[2] <= y[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|BattleBoard|character:player2
update => health[0]~reg0.CLK
update => health[1]~reg0.CLK
update => health[2]~reg0.CLK
update => health[3]~reg0.CLK
update => health[4]~reg0.CLK
update => health[5]~reg0.CLK
update => health[6]~reg0.CLK
update => health[7]~reg0.CLK
update => health[8]~reg0.CLK
en => health[8]~reg0.ENA
en => health[7]~reg0.ENA
en => health[6]~reg0.ENA
en => health[5]~reg0.ENA
en => health[4]~reg0.ENA
en => health[3]~reg0.ENA
en => health[2]~reg0.ENA
en => health[1]~reg0.ENA
en => health[0]~reg0.ENA
rst => health[0]~reg0.ALOAD
rst => health[1]~reg0.ALOAD
rst => health[2]~reg0.ALOAD
rst => health[3]~reg0.ALOAD
rst => health[4]~reg0.ALOAD
rst => health[5]~reg0.ALOAD
rst => health[6]~reg0.ALOAD
rst => health[7]~reg0.ALOAD
rst => health[8]~reg0.ALOAD
rst => special[1]$latch.LATCH_ENABLE
i[0] => Decoder0.IN1
i[0] => Decoder1.IN2
i[1] => Decoder1.IN1
i[2] => Decoder0.IN0
i[2] => Decoder1.IN0
damage[0] => Add0.IN9
damage[1] => Add0.IN8
damage[2] => Add0.IN7
damage[3] => Add0.IN6
damage[4] => Add0.IN5
damage[5] => Add0.IN4
cost[0] => ~NO_FANOUT~
cost[1] => ~NO_FANOUT~
cost[2] => ~NO_FANOUT~
speed[0] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
speed[1] <= Decoder1.DB_MAX_OUTPUT_PORT_TYPE
speed[2] <= Decoder1.DB_MAX_OUTPUT_PORT_TYPE
dodge[0] <= <VCC>
dodge[1] <= dodge.DB_MAX_OUTPUT_PORT_TYPE
dodge[2] <= <VCC>
health[0] <= health[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
health[1] <= health[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
health[2] <= health[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
health[3] <= health[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
health[4] <= health[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
health[5] <= health[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
health[6] <= health[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
health[7] <= health[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
health[8] <= health[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
special[0] <= <GND>
special[1] <= special[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
special[2] <= <GND>
special[3] <= <VCC>
special[4] <= <GND>
color[0] <= Decoder1.DB_MAX_OUTPUT_PORT_TYPE
color[1] <= Decoder1.DB_MAX_OUTPUT_PORT_TYPE
color[2] <= Decoder1.DB_MAX_OUTPUT_PORT_TYPE


|BattleBoard|attack:p2Attack1
update => damage[0]~reg0.CLK
update => damage[1]~reg0.CLK
update => damage[2]~reg0.CLK
update => damage[3]~reg0.CLK
update => damage[4]~reg0.CLK
update => damage[5]~reg0.CLK
update => load[0]~reg0.CLK
update => load[1]~reg0.CLK
update => load[2]~reg0.CLK
update => load[3]~reg0.CLK
en => damage[0]~reg0.ENA
en => load[3]~reg0.ENA
en => load[2]~reg0.ENA
en => load[1]~reg0.ENA
en => load[0]~reg0.ENA
en => damage[5]~reg0.ENA
en => damage[4]~reg0.ENA
en => damage[3]~reg0.ENA
en => damage[2]~reg0.ENA
en => damage[1]~reg0.ENA
rst => damage[0]~reg0.ALOAD
rst => damage[1]~reg0.ALOAD
rst => damage[2]~reg0.ALOAD
rst => damage[3]~reg0.ALOAD
rst => damage[4]~reg0.ALOAD
rst => damage[5]~reg0.ALOAD
rst => load[0]~reg0.ALOAD
rst => load[1]~reg0.ALOAD
rst => load[2]~reg0.ALOAD
rst => load[3]~reg0.ALOAD
i[0] => Decoder1.IN1
i[0] => Decoder3.IN1
i[1] => Decoder0.IN0
i[1] => Decoder1.IN0
i[1] => Decoder3.IN0
j[0] => Decoder0.IN2
j[0] => Decoder1.IN3
j[0] => Decoder2.IN1
j[0] => Decoder3.IN2
j[1] => Decoder0.IN1
j[1] => Decoder1.IN2
j[1] => Decoder2.IN0
dodge[0] => LessThan0.IN5
dodge[0] => Add0.IN10
dodge[0] => Add1.IN5
dodge[1] => LessThan0.IN4
dodge[1] => Add0.IN9
dodge[1] => Add1.IN4
dodge[2] => LessThan0.IN3
dodge[2] => Add0.IN8
dodge[2] => Add1.IN3
dodge[3] => LessThan0.IN2
dodge[3] => Add0.IN7
dodge[3] => Add1.IN2
dodge[4] => LessThan0.IN1
dodge[4] => Add0.IN6
dodge[4] => Add1.IN1
aim[0] => LessThan0.IN10
aim[0] => Add1.IN10
aim[0] => Add0.IN5
aim[1] => LessThan0.IN9
aim[1] => Add1.IN9
aim[1] => Add0.IN4
aim[2] => LessThan0.IN8
aim[2] => Add1.IN8
aim[2] => Add0.IN3
aim[3] => LessThan0.IN7
aim[3] => Add1.IN7
aim[3] => Add0.IN2
aim[4] => LessThan0.IN6
aim[4] => Add1.IN6
aim[4] => Add0.IN1
spread[0] <= Decoder2.DB_MAX_OUTPUT_PORT_TYPE
spread[1] <= WideOr7.DB_MAX_OUTPUT_PORT_TYPE
spread[2] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
spread[3] <= spread.DB_MAX_OUTPUT_PORT_TYPE
spread[4] <= <GND>
range[0] <= WideOr10.DB_MAX_OUTPUT_PORT_TYPE
range[1] <= WideOr9.DB_MAX_OUTPUT_PORT_TYPE
range[2] <= WideOr8.DB_MAX_OUTPUT_PORT_TYPE
range[3] <= <GND>
range[4] <= <GND>
load[0] <= load[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
load[1] <= load[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
load[2] <= load[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
load[3] <= load[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[0] <= damage[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[1] <= damage[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[2] <= damage[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[3] <= damage[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[4] <= damage[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[5] <= damage[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|BattleBoard|attack:p2Attack2
update => damage[0]~reg0.CLK
update => damage[1]~reg0.CLK
update => damage[2]~reg0.CLK
update => damage[3]~reg0.CLK
update => damage[4]~reg0.CLK
update => damage[5]~reg0.CLK
update => load[0]~reg0.CLK
update => load[1]~reg0.CLK
update => load[2]~reg0.CLK
update => load[3]~reg0.CLK
en => damage[0]~reg0.ENA
en => load[3]~reg0.ENA
en => load[2]~reg0.ENA
en => load[1]~reg0.ENA
en => load[0]~reg0.ENA
en => damage[5]~reg0.ENA
en => damage[4]~reg0.ENA
en => damage[3]~reg0.ENA
en => damage[2]~reg0.ENA
en => damage[1]~reg0.ENA
rst => damage[0]~reg0.ALOAD
rst => damage[1]~reg0.ALOAD
rst => damage[2]~reg0.ALOAD
rst => damage[3]~reg0.ALOAD
rst => damage[4]~reg0.ALOAD
rst => damage[5]~reg0.ALOAD
rst => load[0]~reg0.ALOAD
rst => load[1]~reg0.ALOAD
rst => load[2]~reg0.ALOAD
rst => load[3]~reg0.ALOAD
i[0] => Decoder1.IN1
i[0] => Decoder3.IN1
i[1] => Decoder0.IN0
i[1] => Decoder1.IN0
i[1] => Decoder3.IN0
j[0] => Decoder0.IN2
j[0] => Decoder1.IN3
j[0] => Decoder2.IN1
j[0] => Decoder3.IN2
j[1] => Decoder0.IN1
j[1] => Decoder1.IN2
j[1] => Decoder2.IN0
dodge[0] => LessThan0.IN5
dodge[0] => Add0.IN10
dodge[0] => Add1.IN5
dodge[1] => LessThan0.IN4
dodge[1] => Add0.IN9
dodge[1] => Add1.IN4
dodge[2] => LessThan0.IN3
dodge[2] => Add0.IN8
dodge[2] => Add1.IN3
dodge[3] => LessThan0.IN2
dodge[3] => Add0.IN7
dodge[3] => Add1.IN2
dodge[4] => LessThan0.IN1
dodge[4] => Add0.IN6
dodge[4] => Add1.IN1
aim[0] => LessThan0.IN10
aim[0] => Add1.IN10
aim[0] => Add0.IN5
aim[1] => LessThan0.IN9
aim[1] => Add1.IN9
aim[1] => Add0.IN4
aim[2] => LessThan0.IN8
aim[2] => Add1.IN8
aim[2] => Add0.IN3
aim[3] => LessThan0.IN7
aim[3] => Add1.IN7
aim[3] => Add0.IN2
aim[4] => LessThan0.IN6
aim[4] => Add1.IN6
aim[4] => Add0.IN1
spread[0] <= Decoder2.DB_MAX_OUTPUT_PORT_TYPE
spread[1] <= WideOr7.DB_MAX_OUTPUT_PORT_TYPE
spread[2] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
spread[3] <= spread.DB_MAX_OUTPUT_PORT_TYPE
spread[4] <= <GND>
range[0] <= WideOr10.DB_MAX_OUTPUT_PORT_TYPE
range[1] <= WideOr9.DB_MAX_OUTPUT_PORT_TYPE
range[2] <= WideOr8.DB_MAX_OUTPUT_PORT_TYPE
range[3] <= <GND>
range[4] <= <GND>
load[0] <= load[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
load[1] <= load[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
load[2] <= load[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
load[3] <= load[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[0] <= damage[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[1] <= damage[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[2] <= damage[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[3] <= damage[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[4] <= damage[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[5] <= damage[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|BattleBoard|attack:p2Attack3
update => damage[0]~reg0.CLK
update => damage[1]~reg0.CLK
update => damage[2]~reg0.CLK
update => damage[3]~reg0.CLK
update => damage[4]~reg0.CLK
update => damage[5]~reg0.CLK
update => load[0]~reg0.CLK
update => load[1]~reg0.CLK
update => load[2]~reg0.CLK
update => load[3]~reg0.CLK
en => damage[0]~reg0.ENA
en => load[3]~reg0.ENA
en => load[2]~reg0.ENA
en => load[1]~reg0.ENA
en => load[0]~reg0.ENA
en => damage[5]~reg0.ENA
en => damage[4]~reg0.ENA
en => damage[3]~reg0.ENA
en => damage[2]~reg0.ENA
en => damage[1]~reg0.ENA
rst => damage[0]~reg0.ALOAD
rst => damage[1]~reg0.ALOAD
rst => damage[2]~reg0.ALOAD
rst => damage[3]~reg0.ALOAD
rst => damage[4]~reg0.ALOAD
rst => damage[5]~reg0.ALOAD
rst => load[0]~reg0.ALOAD
rst => load[1]~reg0.ALOAD
rst => load[2]~reg0.ALOAD
rst => load[3]~reg0.ALOAD
i[0] => Decoder1.IN1
i[0] => Decoder3.IN1
i[1] => Decoder0.IN0
i[1] => Decoder1.IN0
i[1] => Decoder3.IN0
j[0] => Decoder0.IN2
j[0] => Decoder1.IN3
j[0] => Decoder2.IN1
j[0] => Decoder3.IN2
j[1] => Decoder0.IN1
j[1] => Decoder1.IN2
j[1] => Decoder2.IN0
dodge[0] => LessThan0.IN5
dodge[0] => Add0.IN10
dodge[0] => Add1.IN5
dodge[1] => LessThan0.IN4
dodge[1] => Add0.IN9
dodge[1] => Add1.IN4
dodge[2] => LessThan0.IN3
dodge[2] => Add0.IN8
dodge[2] => Add1.IN3
dodge[3] => LessThan0.IN2
dodge[3] => Add0.IN7
dodge[3] => Add1.IN2
dodge[4] => LessThan0.IN1
dodge[4] => Add0.IN6
dodge[4] => Add1.IN1
aim[0] => LessThan0.IN10
aim[0] => Add1.IN10
aim[0] => Add0.IN5
aim[1] => LessThan0.IN9
aim[1] => Add1.IN9
aim[1] => Add0.IN4
aim[2] => LessThan0.IN8
aim[2] => Add1.IN8
aim[2] => Add0.IN3
aim[3] => LessThan0.IN7
aim[3] => Add1.IN7
aim[3] => Add0.IN2
aim[4] => LessThan0.IN6
aim[4] => Add1.IN6
aim[4] => Add0.IN1
spread[0] <= Decoder2.DB_MAX_OUTPUT_PORT_TYPE
spread[1] <= WideOr7.DB_MAX_OUTPUT_PORT_TYPE
spread[2] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
spread[3] <= spread.DB_MAX_OUTPUT_PORT_TYPE
spread[4] <= <GND>
range[0] <= WideOr10.DB_MAX_OUTPUT_PORT_TYPE
range[1] <= WideOr9.DB_MAX_OUTPUT_PORT_TYPE
range[2] <= WideOr8.DB_MAX_OUTPUT_PORT_TYPE
range[3] <= <GND>
range[4] <= <GND>
load[0] <= load[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
load[1] <= load[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
load[2] <= load[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
load[3] <= load[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[0] <= damage[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[1] <= damage[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[2] <= damage[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[3] <= damage[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[4] <= damage[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[5] <= damage[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|BattleBoard|attack:p2Attack4
update => damage[0]~reg0.CLK
update => damage[1]~reg0.CLK
update => damage[2]~reg0.CLK
update => damage[3]~reg0.CLK
update => damage[4]~reg0.CLK
update => damage[5]~reg0.CLK
update => load[0]~reg0.CLK
update => load[1]~reg0.CLK
update => load[2]~reg0.CLK
update => load[3]~reg0.CLK
en => damage[0]~reg0.ENA
en => load[3]~reg0.ENA
en => load[2]~reg0.ENA
en => load[1]~reg0.ENA
en => load[0]~reg0.ENA
en => damage[5]~reg0.ENA
en => damage[4]~reg0.ENA
en => damage[3]~reg0.ENA
en => damage[2]~reg0.ENA
en => damage[1]~reg0.ENA
rst => damage[0]~reg0.ALOAD
rst => damage[1]~reg0.ALOAD
rst => damage[2]~reg0.ALOAD
rst => damage[3]~reg0.ALOAD
rst => damage[4]~reg0.ALOAD
rst => damage[5]~reg0.ALOAD
rst => load[0]~reg0.ALOAD
rst => load[1]~reg0.ALOAD
rst => load[2]~reg0.ALOAD
rst => load[3]~reg0.ALOAD
i[0] => Decoder1.IN1
i[0] => Decoder3.IN1
i[1] => Decoder0.IN0
i[1] => Decoder1.IN0
i[1] => Decoder3.IN0
j[0] => Decoder0.IN2
j[0] => Decoder1.IN3
j[0] => Decoder2.IN1
j[0] => Decoder3.IN2
j[1] => Decoder0.IN1
j[1] => Decoder1.IN2
j[1] => Decoder2.IN0
dodge[0] => LessThan0.IN5
dodge[0] => Add0.IN10
dodge[0] => Add1.IN5
dodge[1] => LessThan0.IN4
dodge[1] => Add0.IN9
dodge[1] => Add1.IN4
dodge[2] => LessThan0.IN3
dodge[2] => Add0.IN8
dodge[2] => Add1.IN3
dodge[3] => LessThan0.IN2
dodge[3] => Add0.IN7
dodge[3] => Add1.IN2
dodge[4] => LessThan0.IN1
dodge[4] => Add0.IN6
dodge[4] => Add1.IN1
aim[0] => LessThan0.IN10
aim[0] => Add1.IN10
aim[0] => Add0.IN5
aim[1] => LessThan0.IN9
aim[1] => Add1.IN9
aim[1] => Add0.IN4
aim[2] => LessThan0.IN8
aim[2] => Add1.IN8
aim[2] => Add0.IN3
aim[3] => LessThan0.IN7
aim[3] => Add1.IN7
aim[3] => Add0.IN2
aim[4] => LessThan0.IN6
aim[4] => Add1.IN6
aim[4] => Add0.IN1
spread[0] <= Decoder2.DB_MAX_OUTPUT_PORT_TYPE
spread[1] <= WideOr7.DB_MAX_OUTPUT_PORT_TYPE
spread[2] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
spread[3] <= spread.DB_MAX_OUTPUT_PORT_TYPE
spread[4] <= <GND>
range[0] <= WideOr10.DB_MAX_OUTPUT_PORT_TYPE
range[1] <= WideOr9.DB_MAX_OUTPUT_PORT_TYPE
range[2] <= WideOr8.DB_MAX_OUTPUT_PORT_TYPE
range[3] <= <GND>
range[4] <= <GND>
load[0] <= load[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
load[1] <= load[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
load[2] <= load[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
load[3] <= load[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[0] <= damage[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[1] <= damage[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[2] <= damage[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[3] <= damage[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[4] <= damage[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
damage[5] <= damage[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|BattleBoard|rand:random2
update => seed[0].CLK
update => seed[1].CLK
update => seed[2].CLK
update => seed[3].CLK
update => seed[4].CLK
update => num[0]~reg0.CLK
update => num[1]~reg0.CLK
update => num[2]~reg0.CLK
update => num[3]~reg0.CLK
update => num[4]~reg0.CLK
rst => seed[0].ALOAD
rst => seed[1].ALOAD
rst => seed[2].ALOAD
rst => seed[3].ALOAD
rst => seed[4].ALOAD
rst => num[0]~reg0.ALOAD
rst => num[1]~reg0.ALOAD
rst => num[2]~reg0.ALOAD
rst => num[3]~reg0.ALOAD
rst => num[4]~reg0.ALOAD
dodge[0] => Mod0.IN4
dodge[0] => seed[0].ADATA
dodge[1] => Mod0.IN3
dodge[1] => seed[1].ADATA
dodge[2] => Mod0.IN2
dodge[2] => seed[2].ADATA
dodge[3] => Mod0.IN1
dodge[3] => seed[3].ADATA
dodge[4] => Mod0.IN0
dodge[4] => seed[4].ADATA
num[0] <= num[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
num[1] <= num[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
num[2] <= num[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
num[3] <= num[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
num[4] <= num[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|BattleBoard|keyboard:key_control
clock => counter[0].CLK
clock => counter[1].CLK
clock => counter[2].CLK
clock => counter[3].CLK
clock => counter[4].CLK
clock => counter[5].CLK
clock => counter[6].CLK
clock => counter[7].CLK
clock => counter[8].CLK
clock => counter[9].CLK
clock => counter[10].CLK
clock => counter[11].CLK
clock => counter[12].CLK
clock => counter[13].CLK
clock => counter[14].CLK
clock => counter[15].CLK
clock => counter[16].CLK
clock => counter[17].CLK
clock => counter[18].CLK
clock => counter[19].CLK
clock => counter[20].CLK
clock => counter[21].CLK
clock => counter[22].CLK
clock => counter[23].CLK
clock => counter[24].CLK
clock => counter[25].CLK
clock => en~reg0.CLK
dataClock => currKey[0]~reg0.CLK
dataClock => currKey[1]~reg0.CLK
dataClock => currKey[2]~reg0.CLK
dataClock => currKey[3]~reg0.CLK
dataClock => currKey[4]~reg0.CLK
dataClock => currKey[5]~reg0.CLK
dataClock => currKey[6]~reg0.CLK
dataClock => currKey[7]~reg0.CLK
dataClock => index[0].CLK
dataClock => index[1].CLK
dataClock => index[2].CLK
dataClock => index[3].CLK
dataClock => S~1.DATAIN
data => currKey.DATAB
data => currKey.DATAB
data => currKey.DATAB
data => currKey.DATAB
data => currKey.DATAB
data => currKey.DATAB
data => currKey.DATAB
data => currKey.DATAB
en <= en~reg0.DB_MAX_OUTPUT_PORT_TYPE
currKey[0] <= currKey[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
currKey[1] <= currKey[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
currKey[2] <= currKey[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
currKey[3] <= currKey[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
currKey[4] <= currKey[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
currKey[5] <= currKey[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
currKey[6] <= currKey[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
currKey[7] <= currKey[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|BattleBoard|lcd:lcd_control
clock => dispClock.CLK
clock => counter[0].CLK
clock => counter[1].CLK
clock => counter[2].CLK
clock => counter[3].CLK
clock => counter[4].CLK
clock => counter[5].CLK
clock => counter[6].CLK
clock => counter[7].CLK
clock => counter[8].CLK
clock => counter[9].CLK
clock => counter[10].CLK
clock => counter[11].CLK
clock => counter[12].CLK
clock => counter[13].CLK
clock => counter[14].CLK
clock => counter[15].CLK
clock => counter[16].CLK
clock => counter[17].CLK
clock => counter[18].CLK
clock => counter[19].CLK
clock => counter[20].CLK
clock => counter[21].CLK
clock => counter[22].CLK
clock => counter[23].CLK
clock => counter[24].CLK
clock => counter[25].CLK
rst => dispClock.ACLR
rst => counter[0].ACLR
rst => counter[1].ACLR
rst => counter[2].ACLR
rst => counter[3].ACLR
rst => counter[4].ACLR
rst => counter[5].ACLR
rst => counter[6].ACLR
rst => counter[7].ACLR
rst => counter[8].ACLR
rst => counter[9].ACLR
rst => counter[10].ACLR
rst => counter[11].ACLR
rst => counter[12].ACLR
rst => counter[13].ACLR
rst => counter[14].ACLR
rst => counter[15].ACLR
rst => counter[16].ACLR
rst => counter[17].ACLR
rst => counter[18].ACLR
rst => counter[19].ACLR
rst => counter[20].ACLR
rst => counter[21].ACLR
rst => counter[22].ACLR
rst => counter[23].ACLR
rst => counter[24].ACLR
rst => counter[25].ACLR
rst => index[0].ACLR
rst => index[1].ACLR
rst => index[2].ACLR
rst => index[3].ACLR
rst => index[4].ACLR
rst => index[5].ACLR
rst => state~3.DATAIN
data[0] => Mux7.IN63
data[1] => Mux6.IN63
data[2] => Mux5.IN63
data[3] => Mux4.IN63
data[4] => Mux3.IN63
data[5] => Mux2.IN63
data[6] => Mux1.IN63
data[7] => Mux0.IN63
data[8] => Mux7.IN62
data[9] => Mux6.IN62
data[10] => Mux5.IN62
data[11] => Mux4.IN62
data[12] => Mux3.IN62
data[13] => Mux2.IN62
data[14] => Mux1.IN62
data[15] => Mux0.IN62
data[16] => Mux7.IN61
data[17] => Mux6.IN61
data[18] => Mux5.IN61
data[19] => Mux4.IN61
data[20] => Mux3.IN61
data[21] => Mux2.IN61
data[22] => Mux1.IN61
data[23] => Mux0.IN61
data[24] => Mux7.IN60
data[25] => Mux6.IN60
data[26] => Mux5.IN60
data[27] => Mux4.IN60
data[28] => Mux3.IN60
data[29] => Mux2.IN60
data[30] => Mux1.IN60
data[31] => Mux0.IN60
data[32] => Mux7.IN59
data[33] => Mux6.IN59
data[34] => Mux5.IN59
data[35] => Mux4.IN59
data[36] => Mux3.IN59
data[37] => Mux2.IN59
data[38] => Mux1.IN59
data[39] => Mux0.IN59
data[40] => Mux7.IN58
data[41] => Mux6.IN58
data[42] => Mux5.IN58
data[43] => Mux4.IN58
data[44] => Mux3.IN58
data[45] => Mux2.IN58
data[46] => Mux1.IN58
data[47] => Mux0.IN58
data[48] => Mux7.IN57
data[49] => Mux6.IN57
data[50] => Mux5.IN57
data[51] => Mux4.IN57
data[52] => Mux3.IN57
data[53] => Mux2.IN57
data[54] => Mux1.IN57
data[55] => Mux0.IN57
data[56] => Mux7.IN56
data[57] => Mux6.IN56
data[58] => Mux5.IN56
data[59] => Mux4.IN56
data[60] => Mux3.IN56
data[61] => Mux2.IN56
data[62] => Mux1.IN56
data[63] => Mux0.IN56
data[64] => Mux7.IN55
data[65] => Mux6.IN55
data[66] => Mux5.IN55
data[67] => Mux4.IN55
data[68] => Mux3.IN55
data[69] => Mux2.IN55
data[70] => Mux1.IN55
data[71] => Mux0.IN55
data[72] => Mux7.IN54
data[73] => Mux6.IN54
data[74] => Mux5.IN54
data[75] => Mux4.IN54
data[76] => Mux3.IN54
data[77] => Mux2.IN54
data[78] => Mux1.IN54
data[79] => Mux0.IN54
data[80] => Mux7.IN53
data[81] => Mux6.IN53
data[82] => Mux5.IN53
data[83] => Mux4.IN53
data[84] => Mux3.IN53
data[85] => Mux2.IN53
data[86] => Mux1.IN53
data[87] => Mux0.IN53
data[88] => Mux7.IN52
data[89] => Mux6.IN52
data[90] => Mux5.IN52
data[91] => Mux4.IN52
data[92] => Mux3.IN52
data[93] => Mux2.IN52
data[94] => Mux1.IN52
data[95] => Mux0.IN52
data[96] => Mux7.IN51
data[97] => Mux6.IN51
data[98] => Mux5.IN51
data[99] => Mux4.IN51
data[100] => Mux3.IN51
data[101] => Mux2.IN51
data[102] => Mux1.IN51
data[103] => Mux0.IN51
data[104] => Mux7.IN50
data[105] => Mux6.IN50
data[106] => Mux5.IN50
data[107] => Mux4.IN50
data[108] => Mux3.IN50
data[109] => Mux2.IN50
data[110] => Mux1.IN50
data[111] => Mux0.IN50
data[112] => Mux7.IN49
data[113] => Mux6.IN49
data[114] => Mux5.IN49
data[115] => Mux4.IN49
data[116] => Mux3.IN49
data[117] => Mux2.IN49
data[118] => Mux1.IN49
data[119] => Mux0.IN49
data[120] => Mux7.IN48
data[121] => Mux6.IN48
data[122] => Mux5.IN48
data[123] => Mux4.IN48
data[124] => Mux3.IN48
data[125] => Mux2.IN48
data[126] => Mux1.IN48
data[127] => Mux0.IN48
data[128] => Mux7.IN47
data[129] => Mux6.IN47
data[130] => Mux5.IN47
data[131] => Mux4.IN47
data[132] => Mux3.IN47
data[133] => Mux2.IN47
data[134] => Mux1.IN47
data[135] => Mux0.IN47
data[136] => Mux7.IN46
data[137] => Mux6.IN46
data[138] => Mux5.IN46
data[139] => Mux4.IN46
data[140] => Mux3.IN46
data[141] => Mux2.IN46
data[142] => Mux1.IN46
data[143] => Mux0.IN46
data[144] => Mux7.IN45
data[145] => Mux6.IN45
data[146] => Mux5.IN45
data[147] => Mux4.IN45
data[148] => Mux3.IN45
data[149] => Mux2.IN45
data[150] => Mux1.IN45
data[151] => Mux0.IN45
data[152] => Mux7.IN44
data[153] => Mux6.IN44
data[154] => Mux5.IN44
data[155] => Mux4.IN44
data[156] => Mux3.IN44
data[157] => Mux2.IN44
data[158] => Mux1.IN44
data[159] => Mux0.IN44
data[160] => Mux7.IN43
data[161] => Mux6.IN43
data[162] => Mux5.IN43
data[163] => Mux4.IN43
data[164] => Mux3.IN43
data[165] => Mux2.IN43
data[166] => Mux1.IN43
data[167] => Mux0.IN43
data[168] => Mux7.IN42
data[169] => Mux6.IN42
data[170] => Mux5.IN42
data[171] => Mux4.IN42
data[172] => Mux3.IN42
data[173] => Mux2.IN42
data[174] => Mux1.IN42
data[175] => Mux0.IN42
data[176] => Mux7.IN41
data[177] => Mux6.IN41
data[178] => Mux5.IN41
data[179] => Mux4.IN41
data[180] => Mux3.IN41
data[181] => Mux2.IN41
data[182] => Mux1.IN41
data[183] => Mux0.IN41
data[184] => Mux7.IN40
data[185] => Mux6.IN40
data[186] => Mux5.IN40
data[187] => Mux4.IN40
data[188] => Mux3.IN40
data[189] => Mux2.IN40
data[190] => Mux1.IN40
data[191] => Mux0.IN40
data[192] => Mux7.IN39
data[193] => Mux6.IN39
data[194] => Mux5.IN39
data[195] => Mux4.IN39
data[196] => Mux3.IN39
data[197] => Mux2.IN39
data[198] => Mux1.IN39
data[199] => Mux0.IN39
data[200] => Mux7.IN38
data[201] => Mux6.IN38
data[202] => Mux5.IN38
data[203] => Mux4.IN38
data[204] => Mux3.IN38
data[205] => Mux2.IN38
data[206] => Mux1.IN38
data[207] => Mux0.IN38
data[208] => Mux7.IN37
data[209] => Mux6.IN37
data[210] => Mux5.IN37
data[211] => Mux4.IN37
data[212] => Mux3.IN37
data[213] => Mux2.IN37
data[214] => Mux1.IN37
data[215] => Mux0.IN37
data[216] => Mux7.IN36
data[217] => Mux6.IN36
data[218] => Mux5.IN36
data[219] => Mux4.IN36
data[220] => Mux3.IN36
data[221] => Mux2.IN36
data[222] => Mux1.IN36
data[223] => Mux0.IN36
data[224] => Mux7.IN35
data[225] => Mux6.IN35
data[226] => Mux5.IN35
data[227] => Mux4.IN35
data[228] => Mux3.IN35
data[229] => Mux2.IN35
data[230] => Mux1.IN35
data[231] => Mux0.IN35
data[232] => Mux7.IN34
data[233] => Mux6.IN34
data[234] => Mux5.IN34
data[235] => Mux4.IN34
data[236] => Mux3.IN34
data[237] => Mux2.IN34
data[238] => Mux1.IN34
data[239] => Mux0.IN34
data[240] => Mux7.IN33
data[241] => Mux6.IN33
data[242] => Mux5.IN33
data[243] => Mux4.IN33
data[244] => Mux3.IN33
data[245] => Mux2.IN33
data[246] => Mux1.IN33
data[247] => Mux0.IN33
data[248] => Mux7.IN32
data[249] => Mux6.IN32
data[250] => Mux5.IN32
data[251] => Mux4.IN32
data[252] => Mux3.IN32
data[253] => Mux2.IN32
data[254] => Mux1.IN32
data[255] => Mux0.IN32
LCD_RS <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
LCD_RW <= <GND>
LCD_EN <= LCD_EN.DB_MAX_OUTPUT_PORT_TYPE
LCD_DATA[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
LCD_DATA[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
LCD_DATA[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
LCD_DATA[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
LCD_DATA[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
LCD_DATA[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
LCD_DATA[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
LCD_DATA[7] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
check <= <GND>


|BattleBoard|seven_segment:comb_5053
i[0] => Decoder0.IN3
i[1] => Decoder0.IN2
i[2] => Decoder0.IN1
i[3] => Decoder0.IN0
o[0] <= o.DB_MAX_OUTPUT_PORT_TYPE
o[1] <= o.DB_MAX_OUTPUT_PORT_TYPE
o[2] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
o[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
o[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
o[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
o[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|BattleBoard|seven_segment:comb_5054
i[0] => Decoder0.IN3
i[1] => Decoder0.IN2
i[2] => Decoder0.IN1
i[3] => Decoder0.IN0
o[0] <= o.DB_MAX_OUTPUT_PORT_TYPE
o[1] <= o.DB_MAX_OUTPUT_PORT_TYPE
o[2] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
o[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
o[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
o[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
o[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|BattleBoard|seven_segment:comb_5055
i[0] => Decoder0.IN3
i[1] => Decoder0.IN2
i[2] => Decoder0.IN1
i[3] => Decoder0.IN0
o[0] <= o.DB_MAX_OUTPUT_PORT_TYPE
o[1] <= o.DB_MAX_OUTPUT_PORT_TYPE
o[2] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
o[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
o[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
o[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
o[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|BattleBoard|seven_segment:comb_5056
i[0] => Decoder0.IN3
i[1] => Decoder0.IN2
i[2] => Decoder0.IN1
i[3] => Decoder0.IN0
o[0] <= o.DB_MAX_OUTPUT_PORT_TYPE
o[1] <= o.DB_MAX_OUTPUT_PORT_TYPE
o[2] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
o[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
o[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
o[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
o[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|BattleBoard|seven_segment:comb_5057
i[0] => Decoder0.IN3
i[1] => Decoder0.IN2
i[2] => Decoder0.IN1
i[3] => Decoder0.IN0
o[0] <= o.DB_MAX_OUTPUT_PORT_TYPE
o[1] <= o.DB_MAX_OUTPUT_PORT_TYPE
o[2] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
o[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
o[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
o[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
o[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|BattleBoard|seven_segment:comb_5058
i[0] => Decoder0.IN3
i[1] => Decoder0.IN2
i[2] => Decoder0.IN1
i[3] => Decoder0.IN0
o[0] <= o.DB_MAX_OUTPUT_PORT_TYPE
o[1] <= o.DB_MAX_OUTPUT_PORT_TYPE
o[2] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
o[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
o[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
o[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
o[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|BattleBoard|vga_adapter:VGA
resetn => resetn.IN1
clock => clock.IN2
colour[0] => colour[0].IN1
colour[1] => colour[1].IN1
colour[2] => colour[2].IN1
x[0] => x[0].IN1
x[1] => x[1].IN1
x[2] => x[2].IN1
x[3] => x[3].IN1
x[4] => x[4].IN1
x[5] => x[5].IN1
x[6] => x[6].IN1
x[7] => x[7].IN1
y[0] => y[0].IN1
y[1] => y[1].IN1
y[2] => y[2].IN1
y[3] => y[3].IN1
y[4] => y[4].IN1
y[5] => y[5].IN1
y[6] => y[6].IN1
plot => writeEn.IN1
VGA_R[0] <= vga_controller:controller.VGA_R
VGA_R[1] <= vga_controller:controller.VGA_R
VGA_R[2] <= vga_controller:controller.VGA_R
VGA_R[3] <= vga_controller:controller.VGA_R
VGA_R[4] <= vga_controller:controller.VGA_R
VGA_R[5] <= vga_controller:controller.VGA_R
VGA_R[6] <= vga_controller:controller.VGA_R
VGA_R[7] <= vga_controller:controller.VGA_R
VGA_R[8] <= vga_controller:controller.VGA_R
VGA_R[9] <= vga_controller:controller.VGA_R
VGA_G[0] <= vga_controller:controller.VGA_G
VGA_G[1] <= vga_controller:controller.VGA_G
VGA_G[2] <= vga_controller:controller.VGA_G
VGA_G[3] <= vga_controller:controller.VGA_G
VGA_G[4] <= vga_controller:controller.VGA_G
VGA_G[5] <= vga_controller:controller.VGA_G
VGA_G[6] <= vga_controller:controller.VGA_G
VGA_G[7] <= vga_controller:controller.VGA_G
VGA_G[8] <= vga_controller:controller.VGA_G
VGA_G[9] <= vga_controller:controller.VGA_G
VGA_B[0] <= vga_controller:controller.VGA_B
VGA_B[1] <= vga_controller:controller.VGA_B
VGA_B[2] <= vga_controller:controller.VGA_B
VGA_B[3] <= vga_controller:controller.VGA_B
VGA_B[4] <= vga_controller:controller.VGA_B
VGA_B[5] <= vga_controller:controller.VGA_B
VGA_B[6] <= vga_controller:controller.VGA_B
VGA_B[7] <= vga_controller:controller.VGA_B
VGA_B[8] <= vga_controller:controller.VGA_B
VGA_B[9] <= vga_controller:controller.VGA_B
VGA_HS <= vga_controller:controller.VGA_HS
VGA_VS <= vga_controller:controller.VGA_VS
VGA_BLANK <= vga_controller:controller.VGA_BLANK
VGA_SYNC <= vga_controller:controller.VGA_SYNC
VGA_CLK <= vga_controller:controller.VGA_CLK


|BattleBoard|vga_adapter:VGA|vga_address_translator:user_input_translator
x[0] => mem_address[0].DATAIN
x[1] => mem_address[1].DATAIN
x[2] => mem_address[2].DATAIN
x[3] => mem_address[3].DATAIN
x[4] => mem_address[4].DATAIN
x[5] => Add1.IN18
x[6] => Add1.IN17
x[7] => Add1.IN16
y[0] => Add0.IN14
y[0] => Add1.IN20
y[1] => Add0.IN13
y[1] => Add1.IN19
y[2] => Add0.IN11
y[2] => Add0.IN12
y[3] => Add0.IN9
y[3] => Add0.IN10
y[4] => Add0.IN7
y[4] => Add0.IN8
y[5] => Add0.IN5
y[5] => Add0.IN6
y[6] => Add0.IN3
y[6] => Add0.IN4
mem_address[0] <= x[0].DB_MAX_OUTPUT_PORT_TYPE
mem_address[1] <= x[1].DB_MAX_OUTPUT_PORT_TYPE
mem_address[2] <= x[2].DB_MAX_OUTPUT_PORT_TYPE
mem_address[3] <= x[3].DB_MAX_OUTPUT_PORT_TYPE
mem_address[4] <= x[4].DB_MAX_OUTPUT_PORT_TYPE
mem_address[5] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[6] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[7] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[8] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[9] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[10] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[11] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[12] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[13] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[14] <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|BattleBoard|vga_adapter:VGA|altsyncram:VideoMemory
wren_a => altsyncram_60g1:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_60g1:auto_generated.data_a[0]
data_a[1] => altsyncram_60g1:auto_generated.data_a[1]
data_a[2] => altsyncram_60g1:auto_generated.data_a[2]
data_b[0] => ~NO_FANOUT~
data_b[1] => ~NO_FANOUT~
data_b[2] => ~NO_FANOUT~
address_a[0] => altsyncram_60g1:auto_generated.address_a[0]
address_a[1] => altsyncram_60g1:auto_generated.address_a[1]
address_a[2] => altsyncram_60g1:auto_generated.address_a[2]
address_a[3] => altsyncram_60g1:auto_generated.address_a[3]
address_a[4] => altsyncram_60g1:auto_generated.address_a[4]
address_a[5] => altsyncram_60g1:auto_generated.address_a[5]
address_a[6] => altsyncram_60g1:auto_generated.address_a[6]
address_a[7] => altsyncram_60g1:auto_generated.address_a[7]
address_a[8] => altsyncram_60g1:auto_generated.address_a[8]
address_a[9] => altsyncram_60g1:auto_generated.address_a[9]
address_a[10] => altsyncram_60g1:auto_generated.address_a[10]
address_a[11] => altsyncram_60g1:auto_generated.address_a[11]
address_a[12] => altsyncram_60g1:auto_generated.address_a[12]
address_a[13] => altsyncram_60g1:auto_generated.address_a[13]
address_a[14] => altsyncram_60g1:auto_generated.address_a[14]
address_b[0] => altsyncram_60g1:auto_generated.address_b[0]
address_b[1] => altsyncram_60g1:auto_generated.address_b[1]
address_b[2] => altsyncram_60g1:auto_generated.address_b[2]
address_b[3] => altsyncram_60g1:auto_generated.address_b[3]
address_b[4] => altsyncram_60g1:auto_generated.address_b[4]
address_b[5] => altsyncram_60g1:auto_generated.address_b[5]
address_b[6] => altsyncram_60g1:auto_generated.address_b[6]
address_b[7] => altsyncram_60g1:auto_generated.address_b[7]
address_b[8] => altsyncram_60g1:auto_generated.address_b[8]
address_b[9] => altsyncram_60g1:auto_generated.address_b[9]
address_b[10] => altsyncram_60g1:auto_generated.address_b[10]
address_b[11] => altsyncram_60g1:auto_generated.address_b[11]
address_b[12] => altsyncram_60g1:auto_generated.address_b[12]
address_b[13] => altsyncram_60g1:auto_generated.address_b[13]
address_b[14] => altsyncram_60g1:auto_generated.address_b[14]
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_60g1:auto_generated.clock0
clock1 => altsyncram_60g1:auto_generated.clock1
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= <GND>
q_a[1] <= <GND>
q_a[2] <= <GND>
q_b[0] <= altsyncram_60g1:auto_generated.q_b[0]
q_b[1] <= altsyncram_60g1:auto_generated.q_b[1]
q_b[2] <= altsyncram_60g1:auto_generated.q_b[2]
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|BattleBoard|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_60g1:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[0] => ram_block1a8.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[1] => ram_block1a8.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[2] => ram_block1a8.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[3] => ram_block1a8.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[4] => ram_block1a8.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[5] => ram_block1a8.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[6] => ram_block1a8.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
address_a[7] => ram_block1a8.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[8] => ram_block1a7.PORTAADDR8
address_a[8] => ram_block1a8.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
address_a[9] => ram_block1a4.PORTAADDR9
address_a[9] => ram_block1a5.PORTAADDR9
address_a[9] => ram_block1a6.PORTAADDR9
address_a[9] => ram_block1a7.PORTAADDR9
address_a[9] => ram_block1a8.PORTAADDR9
address_a[10] => ram_block1a0.PORTAADDR10
address_a[10] => ram_block1a1.PORTAADDR10
address_a[10] => ram_block1a2.PORTAADDR10
address_a[10] => ram_block1a3.PORTAADDR10
address_a[10] => ram_block1a4.PORTAADDR10
address_a[10] => ram_block1a5.PORTAADDR10
address_a[10] => ram_block1a6.PORTAADDR10
address_a[10] => ram_block1a7.PORTAADDR10
address_a[10] => ram_block1a8.PORTAADDR10
address_a[11] => ram_block1a0.PORTAADDR11
address_a[11] => ram_block1a1.PORTAADDR11
address_a[11] => ram_block1a2.PORTAADDR11
address_a[11] => ram_block1a3.PORTAADDR11
address_a[11] => ram_block1a4.PORTAADDR11
address_a[11] => ram_block1a5.PORTAADDR11
address_a[11] => ram_block1a6.PORTAADDR11
address_a[11] => ram_block1a7.PORTAADDR11
address_a[11] => ram_block1a8.PORTAADDR11
address_a[12] => ram_block1a0.PORTAADDR12
address_a[12] => ram_block1a1.PORTAADDR12
address_a[12] => ram_block1a2.PORTAADDR12
address_a[12] => ram_block1a3.PORTAADDR12
address_a[12] => ram_block1a4.PORTAADDR12
address_a[12] => ram_block1a5.PORTAADDR12
address_a[13] => decode_lsa:decode2.data[0]
address_a[13] => decode_lsa:wren_decode_a.data[0]
address_a[14] => decode_lsa:decode2.data[1]
address_a[14] => decode_lsa:wren_decode_a.data[1]
address_b[0] => ram_block1a0.PORTBADDR
address_b[0] => ram_block1a1.PORTBADDR
address_b[0] => ram_block1a2.PORTBADDR
address_b[0] => ram_block1a3.PORTBADDR
address_b[0] => ram_block1a4.PORTBADDR
address_b[0] => ram_block1a5.PORTBADDR
address_b[0] => ram_block1a6.PORTBADDR
address_b[0] => ram_block1a7.PORTBADDR
address_b[0] => ram_block1a8.PORTBADDR
address_b[1] => ram_block1a0.PORTBADDR1
address_b[1] => ram_block1a1.PORTBADDR1
address_b[1] => ram_block1a2.PORTBADDR1
address_b[1] => ram_block1a3.PORTBADDR1
address_b[1] => ram_block1a4.PORTBADDR1
address_b[1] => ram_block1a5.PORTBADDR1
address_b[1] => ram_block1a6.PORTBADDR1
address_b[1] => ram_block1a7.PORTBADDR1
address_b[1] => ram_block1a8.PORTBADDR1
address_b[2] => ram_block1a0.PORTBADDR2
address_b[2] => ram_block1a1.PORTBADDR2
address_b[2] => ram_block1a2.PORTBADDR2
address_b[2] => ram_block1a3.PORTBADDR2
address_b[2] => ram_block1a4.PORTBADDR2
address_b[2] => ram_block1a5.PORTBADDR2
address_b[2] => ram_block1a6.PORTBADDR2
address_b[2] => ram_block1a7.PORTBADDR2
address_b[2] => ram_block1a8.PORTBADDR2
address_b[3] => ram_block1a0.PORTBADDR3
address_b[3] => ram_block1a1.PORTBADDR3
address_b[3] => ram_block1a2.PORTBADDR3
address_b[3] => ram_block1a3.PORTBADDR3
address_b[3] => ram_block1a4.PORTBADDR3
address_b[3] => ram_block1a5.PORTBADDR3
address_b[3] => ram_block1a6.PORTBADDR3
address_b[3] => ram_block1a7.PORTBADDR3
address_b[3] => ram_block1a8.PORTBADDR3
address_b[4] => ram_block1a0.PORTBADDR4
address_b[4] => ram_block1a1.PORTBADDR4
address_b[4] => ram_block1a2.PORTBADDR4
address_b[4] => ram_block1a3.PORTBADDR4
address_b[4] => ram_block1a4.PORTBADDR4
address_b[4] => ram_block1a5.PORTBADDR4
address_b[4] => ram_block1a6.PORTBADDR4
address_b[4] => ram_block1a7.PORTBADDR4
address_b[4] => ram_block1a8.PORTBADDR4
address_b[5] => ram_block1a0.PORTBADDR5
address_b[5] => ram_block1a1.PORTBADDR5
address_b[5] => ram_block1a2.PORTBADDR5
address_b[5] => ram_block1a3.PORTBADDR5
address_b[5] => ram_block1a4.PORTBADDR5
address_b[5] => ram_block1a5.PORTBADDR5
address_b[5] => ram_block1a6.PORTBADDR5
address_b[5] => ram_block1a7.PORTBADDR5
address_b[5] => ram_block1a8.PORTBADDR5
address_b[6] => ram_block1a0.PORTBADDR6
address_b[6] => ram_block1a1.PORTBADDR6
address_b[6] => ram_block1a2.PORTBADDR6
address_b[6] => ram_block1a3.PORTBADDR6
address_b[6] => ram_block1a4.PORTBADDR6
address_b[6] => ram_block1a5.PORTBADDR6
address_b[6] => ram_block1a6.PORTBADDR6
address_b[6] => ram_block1a7.PORTBADDR6
address_b[6] => ram_block1a8.PORTBADDR6
address_b[7] => ram_block1a0.PORTBADDR7
address_b[7] => ram_block1a1.PORTBADDR7
address_b[7] => ram_block1a2.PORTBADDR7
address_b[7] => ram_block1a3.PORTBADDR7
address_b[7] => ram_block1a4.PORTBADDR7
address_b[7] => ram_block1a5.PORTBADDR7
address_b[7] => ram_block1a6.PORTBADDR7
address_b[7] => ram_block1a7.PORTBADDR7
address_b[7] => ram_block1a8.PORTBADDR7
address_b[8] => ram_block1a0.PORTBADDR8
address_b[8] => ram_block1a1.PORTBADDR8
address_b[8] => ram_block1a2.PORTBADDR8
address_b[8] => ram_block1a3.PORTBADDR8
address_b[8] => ram_block1a4.PORTBADDR8
address_b[8] => ram_block1a5.PORTBADDR8
address_b[8] => ram_block1a6.PORTBADDR8
address_b[8] => ram_block1a7.PORTBADDR8
address_b[8] => ram_block1a8.PORTBADDR8
address_b[9] => ram_block1a0.PORTBADDR9
address_b[9] => ram_block1a1.PORTBADDR9
address_b[9] => ram_block1a2.PORTBADDR9
address_b[9] => ram_block1a3.PORTBADDR9
address_b[9] => ram_block1a4.PORTBADDR9
address_b[9] => ram_block1a5.PORTBADDR9
address_b[9] => ram_block1a6.PORTBADDR9
address_b[9] => ram_block1a7.PORTBADDR9
address_b[9] => ram_block1a8.PORTBADDR9
address_b[10] => ram_block1a0.PORTBADDR10
address_b[10] => ram_block1a1.PORTBADDR10
address_b[10] => ram_block1a2.PORTBADDR10
address_b[10] => ram_block1a3.PORTBADDR10
address_b[10] => ram_block1a4.PORTBADDR10
address_b[10] => ram_block1a5.PORTBADDR10
address_b[10] => ram_block1a6.PORTBADDR10
address_b[10] => ram_block1a7.PORTBADDR10
address_b[10] => ram_block1a8.PORTBADDR10
address_b[11] => ram_block1a0.PORTBADDR11
address_b[11] => ram_block1a1.PORTBADDR11
address_b[11] => ram_block1a2.PORTBADDR11
address_b[11] => ram_block1a3.PORTBADDR11
address_b[11] => ram_block1a4.PORTBADDR11
address_b[11] => ram_block1a5.PORTBADDR11
address_b[11] => ram_block1a6.PORTBADDR11
address_b[11] => ram_block1a7.PORTBADDR11
address_b[11] => ram_block1a8.PORTBADDR11
address_b[12] => ram_block1a0.PORTBADDR12
address_b[12] => ram_block1a1.PORTBADDR12
address_b[12] => ram_block1a2.PORTBADDR12
address_b[12] => ram_block1a3.PORTBADDR12
address_b[12] => ram_block1a4.PORTBADDR12
address_b[12] => ram_block1a5.PORTBADDR12
address_b[13] => address_reg_b[0].DATAIN
address_b[13] => decode_e8a:rden_decode_b.data[0]
address_b[14] => address_reg_b[1].DATAIN
address_b[14] => decode_e8a:rden_decode_b.data[1]
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
clock0 => ram_block1a8.CLK0
clock1 => ram_block1a0.CLK1
clock1 => ram_block1a1.CLK1
clock1 => ram_block1a2.CLK1
clock1 => ram_block1a3.CLK1
clock1 => ram_block1a4.CLK1
clock1 => ram_block1a5.CLK1
clock1 => ram_block1a6.CLK1
clock1 => ram_block1a7.CLK1
clock1 => ram_block1a8.CLK1
clock1 => address_reg_b[1].CLK
clock1 => address_reg_b[0].CLK
clock1 => out_address_reg_b[1].CLK
clock1 => out_address_reg_b[0].CLK
data_a[0] => ram_block1a0.PORTADATAIN
data_a[0] => ram_block1a3.PORTADATAIN
data_a[0] => ram_block1a6.PORTADATAIN
data_a[1] => ram_block1a1.PORTADATAIN
data_a[1] => ram_block1a4.PORTADATAIN
data_a[1] => ram_block1a7.PORTADATAIN
data_a[2] => ram_block1a2.PORTADATAIN
data_a[2] => ram_block1a5.PORTADATAIN
data_a[2] => ram_block1a8.PORTADATAIN
q_b[0] <= mux_0nb:mux3.result[0]
q_b[1] <= mux_0nb:mux3.result[1]
q_b[2] <= mux_0nb:mux3.result[2]
wren_a => decode_lsa:decode2.enable
wren_a => decode_lsa:wren_decode_a.enable


|BattleBoard|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_60g1:auto_generated|decode_lsa:decode2
data[0] => w_anode105w[1].IN0
data[0] => w_anode118w[1].IN1
data[0] => w_anode126w[1].IN0
data[0] => w_anode134w[1].IN1
data[1] => w_anode105w[2].IN0
data[1] => w_anode118w[2].IN0
data[1] => w_anode126w[2].IN1
data[1] => w_anode134w[2].IN1
enable => w_anode105w[1].IN0
enable => w_anode118w[1].IN0
enable => w_anode126w[1].IN0
enable => w_anode134w[1].IN0
eq[0] <= w_anode105w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode118w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode126w[2].DB_MAX_OUTPUT_PORT_TYPE


|BattleBoard|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_60g1:auto_generated|decode_e8a:rden_decode_b
data[0] => w_anode143w[1].IN0
data[0] => w_anode157w[1].IN1
data[0] => w_anode166w[1].IN0
data[0] => w_anode175w[1].IN1
data[1] => w_anode143w[2].IN0
data[1] => w_anode157w[2].IN0
data[1] => w_anode166w[2].IN1
data[1] => w_anode175w[2].IN1
eq[0] <= w_anode143w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode157w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode166w[2].DB_MAX_OUTPUT_PORT_TYPE


|BattleBoard|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_60g1:auto_generated|decode_lsa:wren_decode_a
data[0] => w_anode105w[1].IN0
data[0] => w_anode118w[1].IN1
data[0] => w_anode126w[1].IN0
data[0] => w_anode134w[1].IN1
data[1] => w_anode105w[2].IN0
data[1] => w_anode118w[2].IN0
data[1] => w_anode126w[2].IN1
data[1] => w_anode134w[2].IN1
enable => w_anode105w[1].IN0
enable => w_anode118w[1].IN0
enable => w_anode126w[1].IN0
enable => w_anode134w[1].IN0
eq[0] <= w_anode105w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode118w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode126w[2].DB_MAX_OUTPUT_PORT_TYPE


|BattleBoard|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_60g1:auto_generated|mux_0nb:mux3
data[0] => data0_wire[0].IN0
data[1] => data0_wire[1].IN0
data[2] => data0_wire[2].IN0
data[3] => data1_wire[0].IN0
data[4] => data1_wire[1].IN0
data[5] => data1_wire[2].IN0
data[6] => data2_wire[0].IN0
data[7] => data2_wire[1].IN0
data[8] => data2_wire[2].IN0
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= result_node[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= result_node[2].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => data0_wire[2].IN0
sel[0] => data1_wire[2].IN1
sel[0] => data1_wire[1].IN1
sel[0] => data1_wire[0].IN1
sel[1] => data2_wire[2].IN1
sel[1] => data2_wire[1].IN1
sel[1] => data2_wire[0].IN1
sel[1] => _.IN0


|BattleBoard|vga_adapter:VGA|vga_pll:mypll
clock_in => clock_input_bus[0].IN1
clock_out <= altpll:altpll_component.clk


|BattleBoard|vga_adapter:VGA|vga_pll:mypll|altpll:altpll_component
inclk[0] => pll.CLK
inclk[1] => pll.CLK1
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= <GND>
clk[4] <= <GND>
clk[5] <= <GND>
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= sclkout1.DB_MAX_OUTPUT_PORT_TYPE
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|BattleBoard|vga_adapter:VGA|vga_controller:controller
vga_clock => VGA_BLANK~reg0.CLK
vga_clock => VGA_VS~reg0.CLK
vga_clock => VGA_HS~reg0.CLK
vga_clock => VGA_BLANK1.CLK
vga_clock => VGA_VS1.CLK
vga_clock => VGA_HS1.CLK
vga_clock => yCounter[0].CLK
vga_clock => yCounter[1].CLK
vga_clock => yCounter[2].CLK
vga_clock => yCounter[3].CLK
vga_clock => yCounter[4].CLK
vga_clock => yCounter[5].CLK
vga_clock => yCounter[6].CLK
vga_clock => yCounter[7].CLK
vga_clock => yCounter[8].CLK
vga_clock => yCounter[9].CLK
vga_clock => xCounter[0].CLK
vga_clock => xCounter[1].CLK
vga_clock => xCounter[2].CLK
vga_clock => xCounter[3].CLK
vga_clock => xCounter[4].CLK
vga_clock => xCounter[5].CLK
vga_clock => xCounter[6].CLK
vga_clock => xCounter[7].CLK
vga_clock => xCounter[8].CLK
vga_clock => xCounter[9].CLK
vga_clock => VGA_CLK.DATAIN
resetn => xCounter[0].ACLR
resetn => xCounter[1].ACLR
resetn => xCounter[2].ACLR
resetn => xCounter[3].ACLR
resetn => xCounter[4].ACLR
resetn => xCounter[5].ACLR
resetn => xCounter[6].ACLR
resetn => xCounter[7].ACLR
resetn => xCounter[8].ACLR
resetn => xCounter[9].ACLR
resetn => yCounter[0].ACLR
resetn => yCounter[1].ACLR
resetn => yCounter[2].ACLR
resetn => yCounter[3].ACLR
resetn => yCounter[4].ACLR
resetn => yCounter[5].ACLR
resetn => yCounter[6].ACLR
resetn => yCounter[7].ACLR
resetn => yCounter[8].ACLR
resetn => yCounter[9].ACLR
pixel_colour[0] => VGA_B[0].DATAIN
pixel_colour[0] => VGA_B[9].DATAIN
pixel_colour[0] => VGA_B[8].DATAIN
pixel_colour[0] => VGA_B[7].DATAIN
pixel_colour[0] => VGA_B[6].DATAIN
pixel_colour[0] => VGA_B[5].DATAIN
pixel_colour[0] => VGA_B[4].DATAIN
pixel_colour[0] => VGA_B[3].DATAIN
pixel_colour[0] => VGA_B[2].DATAIN
pixel_colour[0] => VGA_B[1].DATAIN
pixel_colour[1] => VGA_G[0].DATAIN
pixel_colour[1] => VGA_G[9].DATAIN
pixel_colour[1] => VGA_G[8].DATAIN
pixel_colour[1] => VGA_G[7].DATAIN
pixel_colour[1] => VGA_G[6].DATAIN
pixel_colour[1] => VGA_G[5].DATAIN
pixel_colour[1] => VGA_G[4].DATAIN
pixel_colour[1] => VGA_G[3].DATAIN
pixel_colour[1] => VGA_G[2].DATAIN
pixel_colour[1] => VGA_G[1].DATAIN
pixel_colour[2] => VGA_R[0].DATAIN
pixel_colour[2] => VGA_R[9].DATAIN
pixel_colour[2] => VGA_R[8].DATAIN
pixel_colour[2] => VGA_R[7].DATAIN
pixel_colour[2] => VGA_R[6].DATAIN
pixel_colour[2] => VGA_R[5].DATAIN
pixel_colour[2] => VGA_R[4].DATAIN
pixel_colour[2] => VGA_R[3].DATAIN
pixel_colour[2] => VGA_R[2].DATAIN
pixel_colour[2] => VGA_R[1].DATAIN
memory_address[0] <= vga_address_translator:controller_translator.mem_address
memory_address[1] <= vga_address_translator:controller_translator.mem_address
memory_address[2] <= vga_address_translator:controller_translator.mem_address
memory_address[3] <= vga_address_translator:controller_translator.mem_address
memory_address[4] <= vga_address_translator:controller_translator.mem_address
memory_address[5] <= vga_address_translator:controller_translator.mem_address
memory_address[6] <= vga_address_translator:controller_translator.mem_address
memory_address[7] <= vga_address_translator:controller_translator.mem_address
memory_address[8] <= vga_address_translator:controller_translator.mem_address
memory_address[9] <= vga_address_translator:controller_translator.mem_address
memory_address[10] <= vga_address_translator:controller_translator.mem_address
memory_address[11] <= vga_address_translator:controller_translator.mem_address
memory_address[12] <= vga_address_translator:controller_translator.mem_address
memory_address[13] <= vga_address_translator:controller_translator.mem_address
memory_address[14] <= vga_address_translator:controller_translator.mem_address
VGA_R[0] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[1] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[2] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[3] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[4] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[5] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[6] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[7] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[8] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[9] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[0] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[1] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[2] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[3] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[4] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[5] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[6] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[7] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[8] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[9] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[0] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[1] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[2] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[3] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[4] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[5] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[6] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[7] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[8] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[9] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_HS <= VGA_HS~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_VS <= VGA_VS~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_BLANK <= VGA_BLANK~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_SYNC <= <VCC>
VGA_CLK <= vga_clock.DB_MAX_OUTPUT_PORT_TYPE


|BattleBoard|vga_adapter:VGA|vga_controller:controller|vga_address_translator:controller_translator
x[0] => mem_address[0].DATAIN
x[1] => mem_address[1].DATAIN
x[2] => mem_address[2].DATAIN
x[3] => mem_address[3].DATAIN
x[4] => mem_address[4].DATAIN
x[5] => Add1.IN18
x[6] => Add1.IN17
x[7] => Add1.IN16
y[0] => Add0.IN14
y[0] => Add1.IN20
y[1] => Add0.IN13
y[1] => Add1.IN19
y[2] => Add0.IN11
y[2] => Add0.IN12
y[3] => Add0.IN9
y[3] => Add0.IN10
y[4] => Add0.IN7
y[4] => Add0.IN8
y[5] => Add0.IN5
y[5] => Add0.IN6
y[6] => Add0.IN3
y[6] => Add0.IN4
mem_address[0] <= x[0].DB_MAX_OUTPUT_PORT_TYPE
mem_address[1] <= x[1].DB_MAX_OUTPUT_PORT_TYPE
mem_address[2] <= x[2].DB_MAX_OUTPUT_PORT_TYPE
mem_address[3] <= x[3].DB_MAX_OUTPUT_PORT_TYPE
mem_address[4] <= x[4].DB_MAX_OUTPUT_PORT_TYPE
mem_address[5] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[6] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[7] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[8] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[9] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[10] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[11] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[12] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[13] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[14] <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|BattleBoard|clock:comb_5059
clock => frame.CLK
clock => frame_counter[0].CLK
clock => frame_counter[1].CLK
clock => frame_counter[2].CLK
clock => frame_counter[3].CLK
clock => frame_counter[4].CLK
clock => frame_counter[5].CLK
clock => frame_counter[6].CLK
clock => frame_counter[7].CLK
clock => frame_counter[8].CLK
clock => frame_counter[9].CLK
clock => frame_counter[10].CLK
clock => frame_counter[11].CLK
clock => frame_counter[12].CLK
clock => frame_counter[13].CLK
clock => frame_counter[14].CLK
clock => frame_counter[15].CLK
clock => frame_counter[16].CLK
clock => frame_counter[17].CLK
clock => frame_counter[18].CLK
clock => frame_counter[19].CLK
clk <= frame.DB_MAX_OUTPUT_PORT_TYPE


